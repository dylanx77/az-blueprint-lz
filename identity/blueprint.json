{
    "properties": {
        "description": "This blueprint deploys resources in the Identity subscription",
        "targetScope": "subscription",
        "type": "Microsoft.Blueprint/blueprints",
        "resourceGroups": {
            "identityVnetResourceGroup": {
                "description": "Identity VNET resource group."
            },
            "addsResourceGroup": {
                "description": "ADDS VMs resource group"
            },
            "rsvResourceGroup": {
                "description": "Recovery Services Vault resource group"
            },
            "kvResourceGroup": {
                "description": "Key vault resource group."
            }
        },
        "parameters": {
            "environment": {
                "type": "string",
                "metadata": {
                    "description": "Environment Name - dev, test, nonprod, prod"
                }
            },
            "location": {
                "type": "string",
                "metadata": {
                    "description": "Region to deploy resources to"
                }
            },
            "keyVaultName": {
                "type": "string",
                "metadata": {
                    "description": "KV name"
                }
            },
            "vaultSku": {
                "type": "string",
                "metadata": {
                    "description": "KV sku - Standard or Premium"
                }
            },
            "objectId": {
                "type": "string",
                "metadata": {
                    "description": "Specifies the object ID of a user, service principal or security group in the Azure Active Directory tenant for the vault. The object ID must be unique for the list of access policies. Get it by using Get-AzADUser or Get-AzADServicePrincipal cmdlets."
                }
            },
            "keysPermissions": {
                "type": "array",
                "metadata": {
                    "description": "Specifies the permissions to keys in the vault. Valid values are: all, encrypt, decrypt, wrapKey, unwrapKey, sign, verify, get, list, create, update, import, delete, backup, restore, recover, and purge."
                }
            },
            "secretsPermissions": {
                "type": "array",
                "metadata": {
                    "description": "Specifies the permissions to secrets in the vault. Valid values are: all, get, list, set, delete, backup, restore, recover, and purge."
                }
            },
            "recoveryServicesVaultName": {
                "type": "string",
                "metadata": {
                    "description": "RSV name"
                }
            },
            "networkSecurityGroupName": {
                "type": "string",
                "metadata": {
                    "description": "Identity Network Security Group name"
                }
            },
            "vnetName": {
                "type": "string",
                "metadata": {
                    "description": "Identity VNET Name"
                }
            },
            "vnetCidr": {
                "type": "string",
                "metadata": {
                    "description": "Identity VNET CIDR"
                }
            },
            "dnsServers": {
                "type": "array",
                "metadata": {
                    "description": "Identity DNS servers"
                }
            },
            "bastionSnCidr": {
                "type": "string",
                "metadata": {
                    "description": "Bastion subnet CIDR"
                }
            },
            "adSnCidr": {
                "type": "string",
                "metadata": {
                    "description": "AD subnet CIDR"
                }
            },
            "pamSnCidr": {
                "type": "string",
                "metadata": {
                    "description": "PAM subnet CIDR"
                }
            },
            "sailpointSnCidr": {
                "type": "string",
                "metadata": {
                    "description": "Sailpoint subnet CIDR"
                }
            },
            "publicIpAddressForBastionName": {
                "type": "string",
                "metadata": {
                    "description": "Idenity Bastion host public IP address name"
                }
            },
            "bastionName": {
                "type": "string",
                "metadata": {
                    "description": "Identity Bastion host name"
                }
            },
            "addsVm01": {
                "type": "string",
                "metadata": {
                    "description": "ADDS VM 01 Name"
                }
            },
            "addsVm02": {
                "type": "string",
                "metadata": {
                    "description": "ADDS VM 02 Name"
                }
            },
            "adminPassword": {
                "type": "securestring",
                "metadata": {
                    "description": "Admin password for GH Runner VMs"
                }
            },
            "storageAccountAdds": {
                "type": "string",
                "metadata": {
                    "description": "Storage account for ADDS VM boot diagnostics"
                }
            },
            "identityAddsSnId": {
                "type": "string",
                "metadata": {
                    "description": "Subnet ID that ADDS VMs will be deployed to"
                }
            }
        }
    }
}